'use strict';

const Homey = require('homey');

const { SimpleLogMixin } = require('homey-simplelog-api');

// Development
if (process.env.DEBUG === '1') {
  try {
    // eslint-disable-next-line global-require
    require('node:inspector').waitForDebugger();
  } catch (err) {
    // eslint-disable-next-line global-require
    require('node:inspector').open(9229, '0.0.0.0', true);
  }
}

module.exports = class MyApp extends SimpleLogMixin(Homey.App) {

  async onInit() {
    await this.notifyInfo(`Starting '${this.homey.manifest.id}@${this.homey.manifest.version}' app...`);
    this.logDebug('onInit()');

    // Homey events
    this.homey.on('unload', this.onUnload.bind(this));
  }

  // Homey on events

  onUnload() {
    this.logDebug('Homey: onUnload()');
  }

  // myHomey notify user

  notifyInfo(msg) {
    return this.homey.notifications.createNotification({
      excerpt: `**${this.homey.manifest.name.en}** - ${msg}`,
    })
      .then(() => this.logInfo(`[NOTIFY] ${msg}`))
      .catch((err) => this.logError(`notifyInfo() > ${err}`));
  }

  notifyNotice(msg) {
    return this.homey.notifications.createNotification({
      excerpt: `**${this.homey.manifest.name.en}** - Notice: ${msg}`,
    })
      .then(() => this.logNotice(`[NOTIFY] ${msg}`))
      .catch((err) => this.logError(`notifyNotice() > ${err}`));
  }

  notifyError(msg) {
    return this.homey.notifications.createNotification({
      excerpt: `**${this.homey.manifest.name.en}** - Error: ${msg}`,
    })
      .then(() => this.logError(`[NOTIFY] ${msg}`))
      .catch((err) => this.logError(`notifyError() > ${err}`));
  }

};
